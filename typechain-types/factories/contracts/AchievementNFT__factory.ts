/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AchievementNFT,
  AchievementNFTInterface,
} from "../../contracts/AchievementNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintAchievement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516116cf3803806116cf83398101604081905261002f91610127565b806040518060400160405280600e81526020016d1058da1a595d995b595b9d13919560921b8152506040518060400160405280600881526020016724a3a616a0a1a42b60c11b815250816000908161008791906101f6565b50600161009482826101f6565b5050506001600160a01b0381166100c557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100ce816100d5565b50506102b4565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561013957600080fd5b81516001600160a01b038116811461015057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061018157607f821691505b6020821081036101a157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f157806000526020600020601f840160051c810160208510156101ce5750805b601f840160051c820191505b818110156101ee57600081556001016101da565b50505b505050565b81516001600160401b0381111561020f5761020f610157565b6102238161021d845461016d565b846101a7565b6020601f821160018114610257576000831561023f5750848201515b600019600385901b1c1916600184901b1784556101ee565b600084815260208120601f198516915b828110156102875787850151825560209485019460019092019101610267565b50848210156102a55786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61140c806102c36000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb4651461022f578063b88d4fde14610242578063c87b56dd14610255578063e985e9c514610268578063f2fde38b1461027b57600080fd5b8063715018a61461020557806375794a3c1461020d5780638da5cb5b1461021657806395d89b411461022757600080fd5b80630fc7e0c3116100e95780630fc7e0c31461019857806323b872dd146101ab57806342842e0e146101be5780636352211e146101d157806370a08231146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610ed2565b61028e565b60405190151581526020015b60405180910390f35b61014b6102b9565b60405161013a9190610f3f565b61016b610166366004610f52565b61034b565b6040516001600160a01b03909116815260200161013a565b610196610191366004610f87565b610374565b005b6101966101a6366004611041565b610383565b6101966101b93660046110a3565b6103bc565b6101966101cc3660046110a3565b61044c565b61016b6101df366004610f52565b61046c565b6101f76101f23660046110e0565b610477565b60405190815260200161013a565b6101966104bf565b6101f760085481565b6007546001600160a01b031661016b565b61014b6104d3565b61019661023d3660046110fb565b6104e2565b610196610250366004611137565b6104ed565b61014b610263366004610f52565b610505565b61012e6102763660046111b3565b610616565b6101966102893660046110e0565b610644565b60006001600160e01b03198216632483248360e11b14806102b357506102b382610682565b92915050565b6060600080546102c8906111e6565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906111e6565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050905090565b6000610356826106d2565b506000828152600460205260409020546001600160a01b03166102b3565b61037f82823361070b565b5050565b61038b610718565b6008546103988382610745565b6103a281836107aa565b600880549060006103b283611220565b9190505550505050565b6001600160a01b0382166103eb57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103f88383336107fa565b9050836001600160a01b0316816001600160a01b031614610446576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103e2565b50505050565b610467838383604051806020016040528060008152506104ed565b505050565b60006102b3826106d2565b60006001600160a01b0382166104a3576040516322718ad960e21b8152600060048201526024016103e2565b506001600160a01b031660009081526003602052604090205490565b6104c7610718565b6104d160006108f3565b565b6060600180546102c8906111e6565b61037f338383610945565b6104f88484846103bc565b61044633858585856109e4565b6060610510826106d2565b506000828152600660205260408120805461052a906111e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610556906111e6565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905060006105c160408051602081019091526000815290565b905080516000036105d3575092915050565b8151156106055780826040516020016105ed929190611247565b60405160208183030381529060405292505050919050565b61060e84610b0f565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61064c610718565b6001600160a01b03811661067657604051631e4fbdf760e01b8152600060048201526024016103e2565b61067f816108f3565b50565b60006001600160e01b031982166380ac58cd60e01b14806106b357506001600160e01b03198216635b5e139f60e01b145b806102b357506301ffc9a760e01b6001600160e01b03198316146102b3565b6000818152600260205260408120546001600160a01b0316806102b357604051637e27328960e01b8152600481018490526024016103e2565b6104678383836001610b84565b6007546001600160a01b031633146104d15760405163118cdaa760e01b81523360048201526024016103e2565b6001600160a01b03821661076f57604051633250574960e11b8152600060048201526024016103e2565b600061077d838360006107fa565b90506001600160a01b03811615610467576040516339e3563760e11b8152600060048201526024016103e2565b60008281526006602052604090206107c282826112bd565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6000828152600260205260408120546001600160a01b039081169083161561082757610827818486610c8a565b6001600160a01b0381161561086557610844600085600080610b84565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610894576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661097757604051630b61174360e31b81526001600160a01b03831660048201526024016103e2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610b0857604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610a2690889088908790879060040161137c565b6020604051808303816000875af1925050508015610a61575060408051601f3d908101601f19168201909252610a5e918101906113b9565b60015b610aca573d808015610a8f576040519150601f19603f3d011682016040523d82523d6000602084013e610a94565b606091505b508051600003610ac257604051633250574960e11b81526001600160a01b03851660048201526024016103e2565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610b0657604051633250574960e11b81526001600160a01b03851660048201526024016103e2565b505b5050505050565b6060610b1a826106d2565b506000610b3260408051602081019091526000815290565b90506000815111610b525760405180602001604052806000815250610b7d565b80610b5c84610cee565b604051602001610b6d929190611247565b6040516020818303038152906040525b9392505050565b8080610b9857506001600160a01b03821615155b15610c5a576000610ba8846106d2565b90506001600160a01b03831615801590610bd45750826001600160a01b0316816001600160a01b031614155b8015610be75750610be58184610616565b155b15610c105760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103e2565b8115610c585783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610c95838383610d81565b610467576001600160a01b038316610cc357604051637e27328960e01b8152600481018290526024016103e2565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103e2565b60606000610cfb83610de4565b600101905060008167ffffffffffffffff811115610d1b57610d1b610fb1565b6040519080825280601f01601f191660200182016040528015610d45576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610d4f57509392505050565b60006001600160a01b0383161580159061060e5750826001600160a01b0316846001600160a01b03161480610dbb5750610dbb8484610616565b8061060e5750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e235772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e4f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e6d57662386f26fc10000830492506010015b6305f5e1008310610e85576305f5e100830492506008015b6127108310610e9957612710830492506004015b60648310610eab576064830492506002015b600a83106102b35760010192915050565b6001600160e01b03198116811461067f57600080fd5b600060208284031215610ee457600080fd5b8135610b7d81610ebc565b60005b83811015610f0a578181015183820152602001610ef2565b50506000910152565b60008151808452610f2b816020860160208601610eef565b601f01601f19169290920160200192915050565b602081526000610b7d6020830184610f13565b600060208284031215610f6457600080fd5b5035919050565b80356001600160a01b0381168114610f8257600080fd5b919050565b60008060408385031215610f9a57600080fd5b610fa383610f6b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff841115610fe257610fe2610fb1565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561101157611011610fb1565b60405283815290508082840185101561102957600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561105457600080fd5b61105d83610f6b565b9150602083013567ffffffffffffffff81111561107957600080fd5b8301601f8101851361108a57600080fd5b61109985823560208401610fc7565b9150509250929050565b6000806000606084860312156110b857600080fd5b6110c184610f6b565b92506110cf60208501610f6b565b929592945050506040919091013590565b6000602082840312156110f257600080fd5b610b7d82610f6b565b6000806040838503121561110e57600080fd5b61111783610f6b565b91506020830135801515811461112c57600080fd5b809150509250929050565b6000806000806080858703121561114d57600080fd5b61115685610f6b565b935061116460208601610f6b565b925060408501359150606085013567ffffffffffffffff81111561118757600080fd5b8501601f8101871361119857600080fd5b6111a787823560208401610fc7565b91505092959194509250565b600080604083850312156111c657600080fd5b6111cf83610f6b565b91506111dd60208401610f6b565b90509250929050565b600181811c908216806111fa57607f821691505b60208210810361121a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161124057634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351611259818460208801610eef565b83519083019061126d818360208801610eef565b01949350505050565b601f82111561046757806000526020600020601f840160051c8101602085101561129d5750805b601f840160051c820191505b81811015610b0857600081556001016112a9565b815167ffffffffffffffff8111156112d7576112d7610fb1565b6112eb816112e584546111e6565b84611276565b6020601f82116001811461131f57600083156113075750848201515b600019600385901b1c1916600184901b178455610b08565b600084815260208120601f198516915b8281101561134f578785015182556020948501946001909201910161132f565b508482101561136d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113af90830184610f13565b9695505050505050565b6000602082840312156113cb57600080fd5b8151610b7d81610ebc56fea2646970667358221220797d526fadbbcc4564bcac892ca62e73e7f6ff65fc192acb96bec674e60be6fa64736f6c634300081c0033";

type AchievementNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AchievementNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AchievementNFT__factory extends ContractFactory {
  constructor(...args: AchievementNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      AchievementNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AchievementNFT__factory {
    return super.connect(runner) as AchievementNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AchievementNFTInterface {
    return new Interface(_abi) as AchievementNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AchievementNFT {
    return new Contract(address, _abi, runner) as unknown as AchievementNFT;
  }
}
